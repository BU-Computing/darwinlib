/*
 * Copyright (c) 2018.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 2.1 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

version = '1.1.99'
description = 'Android support library for darwin functionality'

//group = 'android'

ext {
    if (!rootProject.hasProperty('androidTarget')) {
        androidTarget = 27
    }
    if (!rootProject.hasProperty('androidCompatVersion')) {
        androidCompatVersion = androidTarget == 25 ? '25.3.1' : (androidTarget == 26 ? '26.1.0' : '27.1.1')
    }
    if (!rootProject.hasProperty('anko_version')) {
        anko_version = '0.10.3'
    }
}

buildscript {
    ext {
        if (!rootProject.hasProperty('androidPluginVersion')) {
            androidPluginVersion = '3.1.0'
        }
        if (!rootProject.hasProperty('kotlin_version')) {
            kotlin_version = '1.2.30'
        }
    }
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidPluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

android {
    compileSdkVersion androidTarget

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion androidTarget
        versionCode 2
        versionName version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    logger.lifecycle("Android plugin version is: ${androidPluginVersion}")
    if (androidPluginVersion.charAt(0)!=('3' as char)) {
        compile "com.android.support:support-annotations:${androidCompatVersion}"
        compile "com.android.support:support-v4:${androidCompatVersion}"
        compile 'com.android.support.constraint:constraint-layout:1.0.2'
        compile 'com.esotericsoftware:kryo:4.0.1'
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.19.3"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile 'org.objenesis:objenesis:2.5.1'
    } else {
        implementation "com.android.support:support-annotations:${androidCompatVersion}"
        implementation "com.android.support:support-v4:${androidCompatVersion}"
        implementation 'com.android.support.constraint:constraint-layout:1.0.2'
        implementation 'com.esotericsoftware:kryo:4.0.1'
        api "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.5"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
//    compile "org.jetbrains.anko:anko-commons:$anko_version"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
